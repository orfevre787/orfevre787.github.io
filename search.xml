<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>oh-my-posh随机主题</title>
      <link href="/2022/10/20/oh-my-posh%E9%9A%8F%E6%9C%BA%E4%B8%BB%E9%A2%98/"/>
      <url>/2022/10/20/oh-my-posh%E9%9A%8F%E6%9C%BA%E4%B8%BB%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>听说oh-my-zsh有开启时随机主题的功能，于是就想在Oh-my-posh上搞一个。  </p><p>把你的配置文件改成这样：</p><pre class="line-numbers language-Powershell" data-language="Powershell"><code class="language-Powershell">#有点儿丧心病狂了哈哈哈$theme&#x3D;Get-Random()#括号里填你想要的主题oh-my-posh init pwsh --config &quot;$env:POSH_THEMES_PATH\$theme.omp.json&quot; | Invoke-Expression <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> PowerShell </tag>
            
            <tag> oh-my-posh </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo明日方舟主题折腾指南</title>
      <link href="/2022/09/15/Hexo%E6%98%8E%E6%97%A5%E6%96%B9%E8%88%9F%E4%B8%BB%E9%A2%98%E6%8A%98%E8%85%BE%E6%8C%87%E5%8D%97/"/>
      <url>/2022/09/15/Hexo%E6%98%8E%E6%97%A5%E6%96%B9%E8%88%9F%E4%B8%BB%E9%A2%98%E6%8A%98%E8%85%BE%E6%8C%87%E5%8D%97/</url>
      
        <content type="html"><![CDATA[<p>假设你在GitHub刷到了<a href="https://github.com/Yue-plus/hexo-theme-arknights">hexo-theme-arknights</a>,并且按照README安装，并尝试启动服务器，结果一连串报错，搞得不会JS的你不知所措，那么请接着往下看，因为我也遇到了同样的问题。  </p><h2 id="ERROR-1-开启服务器失败"><a href="#ERROR-1-开启服务器失败" class="headerlink" title="ERROR#1 开启服务器失败"></a>ERROR#1 开启服务器失败</h2><p>问题描述：Node报错<br>解决方法：确保_config.yml中hljs的值为true，并复制<a href="https://github.com/Yue-plus/hexo-theme-arknights/blob/hexo/_config.arknights.yml">_config.arknights.yml</a>到博客项目中。<br><strong>一定要确保hljs的值为true且项目中有_config.arknights.yml！</strong></p><h2 id="ERROR-2-服务器页面错误"><a href="#ERROR-2-服务器页面错误" class="headerlink" title="ERROR#2 服务器页面错误"></a>ERROR#2 服务器页面错误</h2><p>好不容易服务器启动成功，你在浏览器输入<code>localhost:4000</code>，等到你的却是</p><pre class="line-numbers language-none"><code class="language-none">extends includes&#x2F;layout.pug block content include includes&#x2F;recent-posts.pug include<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>咋整？别担心，我们有超级调（C）试（S）工（D）具（N），得到结果如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> --save hexo-renderer-jade hexo-generator-feed hexo-generator-sitemap hexo-browsersync hexo-generator-archivehexo cleanhexo g<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>如果还不行，就把后两条指令反复执行几遍。</p><h2 id="ERROR-3-界面加载成功，但命令行报错wordcount-is-not-a-function"><a href="#ERROR-3-界面加载成功，但命令行报错wordcount-is-not-a-function" class="headerlink" title="ERROR#3 界面加载成功，但命令行报错wordcount is not a function"></a>ERROR#3 界面加载成功，但命令行报错<code>wordcount is not a function</code></h2><p>wordcount是一个模块，可能没有被安装。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i --save hexo-wordcount<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这些就是我在倒腾hexo明日方舟主题时遇到的问题，希望对你有所帮助。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用Django开发一个博客框架（0）</title>
      <link href="/2022/09/09/%E7%94%A8Django%E5%BC%80%E5%8F%91%E4%B8%80%E4%B8%AA%E5%8D%9A%E5%AE%A2%E6%A1%86%E6%9E%B6%EF%BC%880%EF%BC%89/"/>
      <url>/2022/09/09/%E7%94%A8Django%E5%BC%80%E5%8F%91%E4%B8%80%E4%B8%AA%E5%8D%9A%E5%AE%A2%E6%A1%86%E6%9E%B6%EF%BC%880%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>在网上查找博客框架，竟没有一个是用Python开发的，于是我决定自己做一个。  </p><p>框架名称定为Aeonium，即景天科莲花掌属。博客我会一直做下去，希望这个系列最后一篇文章是在我的新博客上发布。 </p><p>废话不多说，开整！  </p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">django-admin startproject blog <span class="token punctuation">.</span>python manage<span class="token punctuation">.</span>py startapp aeonium<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>在aeonium&#x2F;models.py添加：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Post</span><span class="token punctuation">(</span>models<span class="token punctuation">.</span>Model<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">'''main class for blog'''</span>    title <span class="token operator">=</span> models<span class="token punctuation">.</span>CharField<span class="token punctuation">(</span>max_length<span class="token operator">=</span><span class="token number">255</span><span class="token punctuation">)</span>    text <span class="token operator">=</span> models<span class="token punctuation">.</span>TextField<span class="token punctuation">(</span><span class="token punctuation">)</span>    dateadded <span class="token operator">=</span> models<span class="token punctuation">.</span>DateTimeField<span class="token punctuation">(</span>auto_now_add<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>本地化（在blog&#x2F;settings.py）：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">LANGUAGE_CODE <span class="token operator">=</span> <span class="token string">"zh-Hans"</span>TIME_ZONE <span class="token operator">=</span> <span class="token string">"Asia/Shanghai"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>之后啥都是中文的啦！<br>迁移：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">python manage<span class="token punctuation">.</span>py makemigrationspython manage<span class="token punctuation">.</span>py migrate<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>创建超级用户：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">python manage<span class="token punctuation">.</span>py createsuperuser<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在创建时发生了一件哭笑不得的事情——创建失败，原因竟是忘记了<code>python manage.py migrate</code>……</p><p>今天就先搞到这里了！</p>]]></content>
      
      
      
        <tags>
            
            <tag> django </tag>
            
            <tag> Web开发 </tag>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>费曼算法：最伟大的算法</title>
      <link href="/2022/08/12/%E8%B4%B9%E6%9B%BC%E7%AE%97%E6%B3%95%EF%BC%9A%E6%9C%80%E4%BC%9F%E5%A4%A7%E7%9A%84%E7%AE%97%E6%B3%95/"/>
      <url>/2022/08/12/%E8%B4%B9%E6%9B%BC%E7%AE%97%E6%B3%95%EF%BC%9A%E6%9C%80%E4%BC%9F%E5%A4%A7%E7%9A%84%E7%AE%97%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>费曼算法：  </p><pre><code>1.将问题写下来    2.好好思考3.将答案写下来</code></pre><p><del>什么鬼</del><br>这就是它的伟大之处，是解决一切问题的通用方法，无论是编程、数学题还是其他麻烦。这个看起来不是算法的算法让我大受震撼，因为它体现出了一种简洁：时间复杂度未知，没有任何的代码或公式，简单易懂，跨平台……<br>用大O表示法描述该算法操作步数为：  </p><pre class="line-numbers language-none"><code class="language-none">O(n)&#x3D;*<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>*为通配符。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> 杂谈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WSL从入坑到放弃（WSL劝退指南）</title>
      <link href="/2022/07/03/WSL%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E6%94%BE%E5%BC%83%EF%BC%88WSL%E5%8A%9D%E9%80%80%E6%8C%87%E5%8D%97%EF%BC%89/"/>
      <url>/2022/07/03/WSL%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E6%94%BE%E5%BC%83%EF%BC%88WSL%E5%8A%9D%E9%80%80%E6%8C%87%E5%8D%97%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>第一次听说WSL的时候，我觉得这简直是个神器————在Windows上直接跑Linux命令行，还有便捷的包管理工具，输入指令就可以下载软件，还可以在Windows文件目录下交互……</p><p>但是在用了一段时间后，我逐渐对它失去了兴趣，甚至感到厌烦。  </p><h2 id="缺失软件的apt包"><a href="#缺失软件的apt包" class="headerlink" title="缺失软件的apt包"></a>缺失软件的apt包</h2><p>首先，因为没有GUI，所以只能下载在终端运行的软件，可下载的一下子减少了很多。</p><p>其次，就是apt包的奇怪之处了。像figlet这样的只在终端运行的软件也无法下载，而且是被锁了，不是“找不到软件”。</p><h2 id="我与sources-list斗智斗勇的故事"><a href="#我与sources-list斗智斗勇的故事" class="headerlink" title="我与sources.list斗智斗勇的故事"></a>我与sources.list斗智斗勇的故事</h2><p>众所周知，Ubuntu的默认镜像源下载速度非常慢，于是需要修改镜像源。<br>由于wsl官方不支持GUI，所以只能用Vim修改。（Ubuntu WSL自带Vim）  </p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> /etc/apt/sources.list<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>根本不能操作，只能退出重试。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">vim</span> /etc/apt/sources.list<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>作为一个新手，光是熟悉Vim就花了不少时间。<br><del>正经人谁用Vim啊</del><br>一路d(删除)下来，在Ctrl+V换上清华源的镜像，麻溜保存退出。为了确保修改成功，又执行了一遍上面的指令，但镜像列表岿然不动，就像没人动过一样。  </p><p>于是我又重复做了几遍修改操作，但那列表好像是有金钟罩一样，任我怎么更改，都不能改变它的内容。 </p><p>就在我手无举措的时候，一根“救命稻草”吸引了我。这根“稻草”就是Vscode。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">code /etc/apt/sources.list<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>修改过后IDE显示无法保存。原因很简单，没有加sudo。<br>但是加了之后：</p><pre class="line-numbers language-none"><code class="language-none">sudo: code: command not found<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>只能继续使用Vim。</p><p>真的，用了Vim之后你会心情沮丧的！</p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> WSL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>终于把顶图换好了</title>
      <link href="/2022/06/30/%E7%BB%88%E4%BA%8E%E6%8A%8A%E9%A1%B6%E5%9B%BE%E6%8D%A2%E5%A5%BD%E4%BA%86/"/>
      <url>/2022/06/30/%E7%BB%88%E4%BA%8E%E6%8A%8A%E9%A1%B6%E5%9B%BE%E6%8D%A2%E5%A5%BD%E4%BA%86/</url>
      
        <content type="html"><![CDATA[<p>发现好多人的博客顶图都是hexo默认的，所以想把它换一下。<br>简单查一下，那张图在这两个位置：  </p><pre class="line-numbers language-none"><code class="language-none">public文件夹部分目录├─css│  ├─fonts│  └─images├─fancybox└─js<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">.deploy_git文件夹部分目录├─css│  ├─fonts│  └─images├─fancybox└─js<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>就在image文件夹里   </p><p>换掉，麻溜重启服务器，结果……<br>没有任何变化。</p><p>赶紧上网搜一下，教程里的目录结构完全不一样，根本没有任何帮助。<br>再查一下，发现事情不简单。<br>在node_modules\hexo-theme-landscape\source\css\images、node_modules\hexo-cli\assets\themes\landscape\source\css\images都有这个文件。全部替换掉之后，果然好了。</p><p>再附一下原图的地址：<a href="https://t.bilibili.com/674870530507014217?spm_id_from=333.999.0.0">星球研究所</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>终于成功啦！</title>
      <link href="/2022/06/29/%E7%BB%88%E4%BA%8E%E6%88%90%E5%8A%9F%E5%95%A6%EF%BC%81/"/>
      <url>/2022/06/29/%E7%BB%88%E4%BA%8E%E6%88%90%E5%8A%9F%E5%95%A6%EF%BC%81/</url>
      
        <content type="html"><![CDATA[<p>照着知乎的教程搞的，每次的部署失败，<br>结果一个<code>$ hexo d</code>就成了</p><p><img src="https://img.shields.io/badge/hexo-blue?style=for-the-badge&logo=hexo&logoColor=white"><br><img src="https://img.shields.io/badge/node-43853D?style=for-the-badge&logo=node.js&logoColor=white"></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
